openapi: '3.0.2'
info:
  title: Uranos API Documentation
  version: 'v1.0.0'
servers:
  - url: "http://localhost:8080"
    description: "Local server"
tags:
  - name: "startGame"
    description: "Start a new game."
  - name: "inGame"
    description: "In game actions."
  - name: "endGame"
    description: "End a game."
  - name: "aircraft"
    description: "Aircraft location and status information."
paths:
  "/startGame":
    post:
      tags: ["startGame"]
      summary: "Start a new game."
      description: "Sent only once when the game starts."
      deprecated: false
      requestBody:
        description: "Initial value of airspace. The initial value is sent from the front desk. To be able to read scenario files."
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required: ["areaInfo"]
              properties:
                areaInfo:
                  type: "array"
                  description: "Initial value of airspace."
                  items:
                    $ref: "#/components/schemas/Flight"

      responses:
        "200":
          description: "Game started."

        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                type: "object"
                example:
                  message: Bad request
                  details: Error message indicating which property is missing.
                properties:
                  message:
                    type: string
                  details:
                    type: string

  "/aircraft/location/all":
    get:
      tags: ["aircraft"]
      summary: "Get all aircraft locations and status"
      description: "Returns detailed information for all aircraft including position, vector, instrumented vector, and risk level in text format."
      deprecated: false
      responses:
        "200":
          description: "Aircraft location data retrieved successfully"
          content:
            text/plain:
              schema:
                type: string
                description: "Aircraft data in custom text format with risk levels"
                example: |
                  Aircraft{callsign=JAL123, position={latitude=35.676200, longitude=139.650300, altitude=35000}, vector={heading=90.0, groundSpeed=450.0, verticalSpeed=0.0}, instructedVector={heading=90.0, groundSpeed=450.0, altitude=35000.0}, type=COMMERCIAL_PASSENGER, model=B777, originIata=HND, originIcao=RJTT, destinationIata=LAX, destinationIcao=KLAX, eta=2024-05-21T12:00:00Z, riskLevel=0.00}
                  Aircraft{callsign=JSDF01, position={latitude=35.700000, longitude=139.650300, altitude=35000}, vector={heading=90.0, groundSpeed=450.0, verticalSpeed=0.0}, instructedVector={heading=90.0, groundSpeed=450.0, altitude=35000.0}, type=MILITARY_FIGHTER, model=F-35A, squadron=302SQ, mission=CAP, homeBase=Misawa AB, riskLevel=0.00}
                  Aircraft{callsign=JCG01, position={latitude=35.650000, longitude=139.700000, altitude=2000}, vector={heading=180.0, groundSpeed=120.0, verticalSpeed=0.0}, instructedVector={heading=180.0, groundSpeed=120.0, altitude=2000.0}, type=HELICOPTER, model=UH-60J, operator=Japan Coast Guard, purpose=SAR, homeBase=Tokyo Heliport, hovering=NO, riskLevel=0.00}

  "/aircraft/location":
    get:
      tags: ["aircraft"]
      summary: "Get specific aircraft location and status"
      description: "Returns detailed information for a specific aircraft by callsign including risk level."
      deprecated: false
      parameters:
        - name: callsign
          in: query
          required: true
          schema:
            type: string
          description: "The callsign of the aircraft to retrieve"
          example: "JAL123"
      responses:
        "200":
          description: "Aircraft location data retrieved successfully"
          content:
            text/plain:
              schema:
                type: string
                description: "Aircraft data in custom text format with risk level"
                example: "Aircraft{callsign=JAL123, position={latitude=35.676200, longitude=139.650300, altitude=35000}, vector={heading=90.0, groundSpeed=450.0, verticalSpeed=0.0}, instructedVector={heading=90.0, groundSpeed=450.0, altitude=35000.0}, type=COMMERCIAL_PASSENGER, model=B777, originIata=HND, originIcao=RJTT, destinationIata=LAX, destinationIcao=KLAX, eta=2024-05-21T12:00:00Z, riskLevel=0.00}"
        "400":
          description: "Aircraft not found or bad request"
          content:
            text/plain:
              schema:
                type: string
                example: "Aircraft with callsign JAL123 does not exist."

  "/inGame":
    get:
      tags: ["inGame"]
      summary: "Get the current area infomation."
      description: "Get the current area infomation like air plane position, altitude, heading, etc."
      deprecated: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  gameState:
                    type: "array"
                    description: "Current state of the game."
                    items:
                      $ref: "#/components/schemas/Flight"

        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                type: "object"
                example:
                  message: Bad request
                  details: Error message indicating which property is missing.
                properties:
                  message:
                    type: string
                  details:
                    type: string
    post:
      tags: ["inGame"]
      summary: "Give instructions to the pilot."
      description: Update the altitude, heading, and/or speed of a specified aircraft using its callsign.
      deprecated: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - callsign
              properties:
                callsign:
                  type: string
                  description: The callsign of the aircraft to update.
                altitude:
                  type: integer
                  description: The new altitude for the aircraft in feet. Optional.
                heading:
                  type: integer
                  description: The new heading for the aircraft in degrees (0-360). Optional.
                gspeed:
                  type: integer
                  description: The new ground speed for the aircraft in knots. Optional.
              example:
                callsign: "AAL123"
                altitude: 30000
                heading: 180
                gspeed: 450
      responses:
        '200':
          description: Flight parameters updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Flight parameters updated successfully."
        '400':
          description: Invalid input or missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input or missing required fields."
        '404':
          description: Aircraft not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Aircraft not found."
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Server error."

components:
  schemas:
    Flight:
      type: "object"
      example:
        callsign: "AAL123"
        latitude: 35.553333
        longitude: 139.781113
        heading: 150
        altitude: 35000
        gspeed: 250
        vspeed: 340
        type: "B777"
        orig_iata: "HND"
        orig_icao: "RJTT"
        dest_iata: "LAX"
        dest_icao: "KLAX"
        eta: "2024-05-21T12:00:00Z"
      properties:
        callsign:
          type: "string"
          description: "Each airplane's callsign."
        latitude:
          type: "number"
          format: "float"
          description: "Each airplane's latitude."
        longitude:
          type: "number"
          format: "float"
          description: "Each airplane's longitude."
        heading:
          type: "integer"
          description: "True track (over ground) expressed in integer degrees as 0-360. Please note that 0 can in some cases mean unknown."
        altitude:
          type: integer
          description: Barometric pressure altitude above mean sea level (AMSL) reported at a standard atmospheric pressure (1013.25 hPa / 29.92 in. Hg.) expressed in feet.
        gspeed:
          type: integer
          description: Speed relative to the ground expressed in knots.
        vspeed:
          type: integer
          description: The rate at which the aircraft is ascending or descending in feet per minute.
        type:
          type: string
          nullable: true
          description: Aircraft ICAO type code.
        orig_iata:
          type: string
          example: ARN
          description: Origin airport IATA code
        orig_icao:
          type: string
          example: ESSA
          description: Origin airport ICAO code
        dest_iata:
          type: string
          example: ARN
          description: Destination airport IATA code
        dest_icao:
          type: string
          example: ESSA
          description: Destination airport ICAO code
        eta:
          type: string
          nullable: true
          description: Estimated time of arrival (ISO 8601 date format)

